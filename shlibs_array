#! /bin/sh
# brings array API to SH
#
# Usage :
# ARRAY=$(array_create)
# array_push $ARRAY foo
# array_push $ARRAY bar
# ...
# array_destroy $ARRAY

array_check() {
	[ -z "$1" ] && return 1
	[ ! -e "$1/0_shlib_array.canary" ] && return 2
	return 0
}

array_create() {
	ARRAY_DIR=$(mktemp -d)
	echo "Array for $0 : $$" > ${ARRAY_DIR}/0_shlib_array.canary
	echo $ARRAY_DIR
}

array_destroy() {
	array_check "$@" && ARRAY_DIR="$1" || return 1
	shift

	rm -Rf "$ARRAY_DIR"
}

array_len()
{
        array_check "$@" && ARRAY_DIR="$1" || return 1
        shift

	(
		cd "$ARRAY_DIR"
		LAST_ELEM=$(ls -1r | head -n 1)
		[ "$LAST_ELEM" = "0_shlib_array.canary" ] && echo 0 || echo $LAST_ELEM 
	)
}

array_push()
{
	array_check "$@" && ARRAY_DIR="$1" || return 1
	shift

	(
		cd "$ARRAY_DIR"
		NB_ELEMS=$(ls -1 | wc -l)
		echo "$@" > $NB_ELEMS
	)
}

array_pop()
{
        array_check "$@" && ARRAY_DIR="$1" || return 1
        shift

	(
		cd "$ARRAY_DIR"
		LAST_ELEM=$(array_len $ARRAY_DIR)
		[ "$LAST_ELEM" = "0" ] && return 0
		cat "$LAST_ELEM"
		rm -f "$LAST_ELEM"
	)
}

array_idx()
{
        array_check "$@" && ARRAY_DIR="$1" || return 1
        shift

	(
		cd "$ARRAY_DIR"
		[ ! -r "$1" ] && return 0
		cat "$1"
	)
}

array_values()
{
        array_check "$@" && ARRAY_DIR="$1" || return 1
        shift

	(
		cd "$ARRAY_DIR"
		ls -1 | grep -v 0_shlib_array.canary
	)
}
